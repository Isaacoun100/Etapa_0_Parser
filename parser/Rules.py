class Rules:
    def __init__(self):
        self.rules = {
            0: ['WORLDNAME', '<id>', 'COLON', '<programa>'],
            1: ['IDENTIFIER'],
            2: ['<seccion_de_constantes>', '<seccion_de_tipos>', '<seccion_de_variables>', '<seccion_de_prototipos>', '<seccion_de_rutinas>', '<punto_entrada_del_programa>', 'WORLDSAVE'],
            3: ['BEDROCK', '<constantes>'],
            4: [],
            5: ['<constante>', '<constantes>'],
            6: [],
            7: ['OBSIDIAN', '<tipo>', '<id>', '<literal>'],
            8: ['RESOURCEPACK', '<tipos>'],
            9: [],
            10: ['ANVIL', '<id>', 'ARROW', '<tipo>', 'SEMICOLON', '<tipos>'],
            11: [],
            12: ['INVENTORY', '<variables>'],
            13: [],
            14: ["<variable>", "<variables>"],
            15: [],
            16: ['<tipo>', '<expresion>', 'SEMICOLON'],
            17: ['RECIPE', '<prototipos>'],
            18: [],
            19: ['<prototipo>', '<prototipos>'],
            20: [],
            21: ['SPELL', '<id>', 'OPENPARENTHESIS', '<parametros>', 'CLOSEPARENTHESIS', 'ARROW', '<tipo>'],
            22: ['RITUAL', '<id>', 'OPENPARENTHESIS', '<parametros>', 'CLOSEPARENTHESIS', 'SEMICOLON'],
            23: ['CRAFTINGTABLE', '<rutinas>'],
            24: [],
            25: ['<rutina>', '<rutinas>'],
            26: [],
            27: ['SPELL', '<id>', 'OPENPARENTHESIS', '<parametros>', 'CLOSEPARENTHESIS', '<cuerpo_funcion>', 'SEMICOLON'],
            28: ['RITUAL', '<id>', 'OPENPARENTHESIS', '<parametros>', 'CLOSEPARENTHESIS', '<cuerpo_rutina>', 'SEMICOLON'],
            29: ['SPAWNPOINT', '<cuerpo_rutina>', 'SEMICOLON'],
            30: ['STACK'],
            31: ['RUNE'],
            32: ['SPIDER'],
            33: ['TORCH'],
            34: ['GHAST'],
            35: ['CHAR'],
            36: ['INTEGER'],
            37: ['FLOAT'],
            38: ['ON'],
            39: ['OFF'],
            40: ['STRING', '<acceso_string>'],
            41: ['<id>', 'OPENSQUAREBRACKET', '<literal>', 'CLOSESQUAREBRACKET'],
            42: ['OPENSQUAREBRACKET', '<literal>', 'CLOSESQUAREBRACKET'],
            43: [],
            44: ['<literal_o_variable>'],
            45: [],
            46: ['<literal>', '<mas_parametros>'],
            47: ['<id>', '<mas_parametros>'],
            48: ['COMMA', '<literal_o_variable>'],
            49: [],
            50: ['<secciones>', 'POLLOCRUDO', '<inst_exp>', '<return_rutina>', 'POLLOASADO'],
            51: [],
            52: ['<secciones>', 'POLLOCRUDO', '<inst_exp>', '<return>', 'POLLOASADO'],
            53: [],
            54: ['<return>'],
            55: [],
            56: ['RESPAWN'],
            57: ['<seccion_de_constantes>', '<seccion_de_tipos>', '<seccion_de_variables>'],
            58: ['<expresion>', '<inst_exp>'],
            59: ['<instruccion>', '<inst_exp>'],
            60: [],
            61: ['<while>'],
            62: ['<if>'],
            63: ['<switch>'],
            64: ['<repeat>'],
            65: ['<for>'],
            66: ['<break>'],
            67: ['<halt>'],
            68: ['<continue>'],
            69: ['ENDERPEARL'],
            70: ['REPEATER', '<condicion>', 'CRAFT', '<inst_exp_o_bloque>'],
            71: ['TARGET', '<condicion>', 'CRAFT', '<cuerpo_if>'],
            72: ['HIT', '<inst_exp_o_bloque>', 'MISS', '<inst_exp_o_bloque>'],
            73: ['JUKEBOX', '<condicion>', 'CRAFT', '<cuerpo_switch>'],
            74: ['<cases>', '<silence>'],
            75: ['<case>', '<cases>'],
            76: [],
            77: ['DISC', '<literal>', 'COLON', '<inst_exp>', 'COMMA', '<break>', 'SEMICOLON'],
            78: ['SILENCE', 'COLON', '<inst_exp>', 'COMMA', '<break>', 'SEMICOLON'],
            79: ['SPAWNER', '<inst_exp>', 'EXHAUSTED', '<condicion>'],
            80: ['WALK', '<index>', '<step>', 'CRAFT', '<inst_exp_o_bloque>'],
            81: ['SET', '<id>', 'TO', '<expresion>'],
            82: ['STEP', '<expresion>'],
            83: ['CREEPER'],
            84: ['RAGEQUIT'],
            85: ['<expresion>'],
            86: ['<instruccion>'],
            87: ['<expresion>'],
            88: ['POLLOCRUDO', '<cuerpo_bloque_inst>', 'POLLOASADO'],
            89: ['<instruccion>', '<inst_exp>'],
            90: ['<expresion>', '<inst_exp>'],
            91: ['<asignacion>'],
            92: ['<e_asignado>', '<op_assignacion>', '<or>'],
            93: ['<or>'],
            94: ['<id>'],
            95: ['EQUAL'],
            96: ['PLUS_EQUAL'],
            97: ['MINUS_EQUAL'],
            98: ['MULTIPLY_EQUAL'],
            99: ['DIVIDE_EQUAL'],
            100: ['MODULE_EQUAL'],
            101: ['<xor>', '<or_logico>'],
            102: ['OR', '<xor>', '<or_logico>'],
            103: [],
            104: ['<and>', '<xor_logico>'],
            105: ['XOR', '<and>', '<xor_logico>'],
            106: [],
            107: ['<igualdad>', '<and_logico>'],
            108: ['AND', '<igualdad>', '<and_logico>'],
            109: [],
            110: ['<desigualdad>', '<cmp_igualdad>'],
            111: ['IS', '<desigualdad>', '<cmp_igualdad>'],
            112: ['ISNOT', '<desigualdad>', '<cmp_igualdad>'],
            113: [],
            114: ['<dividir_string>', '<cmp_desigual>'],
            115: ['MORETHAN', '<op_lineal>'],
            116: ['MOREEQUAL', '<op_lineal>'],
            117: ['LESSTHAN', '<op_lineal>'],
            118: ['LESSEQUAL', '<op_lineal>'],
            119: [],
            120: ['<unir_intersec_string>', '<op_string>'],
            121: ['FROM', '<literal>', '<literal>', 'DOUBLEPOUNDKEY', '<literal>', '<unir_intersec_string>'],
            122: ['EXCEPT', '<literal>', '<literal>', 'DOUBLEPOUNDKEY', '<literal>', '<unir_intersec_string>'],
            123: [],
            124: ['<op_lineal>', '<op_union_interec>'],
            125: ['BIND', '<op_lineal>'],
            126: ['SEEK', '<op_lineal>'],
            127: [],
            128: ['<termino>', '<suma_resta>'],
            129: ['INT_SUM', '<termino>', '<suma_resta>'],
            130: ['INT_MIN', '<termino>', '<suma_resta>'],
            131: ['FLOAT_SUM', '<termino>', '<suma_resta>'],
            132: ['FLOAT_MIN', '<termino>', '<suma_resta>'],
            133: [],
            134: ['<factor>', '<sub_termino>'],
            135: ['INT_MULT', '<factor>', '<sub_termino>'],
            136: ['INT_DIV', '<factor>', '<sub_termino>'],
            137: ['INT_MOD', '<factor>', '<sub_termino>'],
            138: ['FLOAT_MULT', '<factor>', '<sub_termino>'],
            139: ['FLOAT_DIV', '<factor>', '<sub_termino>'],
            140: ['FLOAT_MOD', '<factor>', '<sub_termino>'],
            141: [],
            142: ['<op_unaria>', '<sub_factor>'],
            143: ['<literal>'],
            144: ['<id>'],
            145: ['OPENPARENTHESIS', '<expresion>', 'CLOSEPARENTHESIS'],
            146: ['ISENGRAVED'],
            147: ['ISINSCRIBED'],
            148: ['INT_MIN'],
            149: ['INT_SUM'],
            150: ['FLOAT_SUM'],
            151: ['FLOAT_MIN'],
            152: ['NOT'],
            153: ['SOULSAND'],
            154: ['MAGMA'],
            155: ['CAST'],
            156: ['CHUNK'],
            157: ['POUNDKEY'],
            158: ['ETCHUP'],
            159: ['ETCHDOWN'],
            160: []
    }
        
    def getRules(self):
        return self.rules

