class Rules:
    def __init__(self):
        self.rules = {
            0: ["WORLDNAME", "<id>", "COLON", "<programa>"],
            1: ["IDENTIFIER"],
            2: [
                "<seccion_de_constantes>",
                "<seccion_de_tipos>",
                "<seccion_de_variables>",
                "<seccion_de_prototipos>",
                "<seccion_de_rutinas>",
                "<punto_entrada_del_programa>",
                "WORLDSAVE",
            ],
            3: ["BEDROCK", "<constantes>"],
            4: [],
            5: ["<constante>", "<constantes>"],
            6: [],
            7: ["OBSIDIAN", "<tipo>", "<id>", "<literal>"],
            8: ["RESOURCEPACK", "<tipos>"],
            9: [],
            10: ["<id>", "COLON", "<tipo>", "<tipos>"],
            11: [],
            12: ["INVENTORY", "<variables>"],
            13: [],
            14: ["<variable>"],
            15: [],
            16: ["<tipo>", "<expresion>", "SEMICOLON"],
            17: ["RECIPE", "<prototipos>"],
            18: [],
            19: ["<prototipo>", "<prototipos>"],
            20: [],
            21: [
                "SPELL",
                "<id>",
                "PARENTHESIS",
                "<parametros>",
                "PARENTHESIS",
                "ARROW",
                "<tipo>",
            ],
            22: [
                "RITUAL",
                "<id>",
                "PARENTHESIS",
                "<parametros>",
                "PARENTHESIS",
                "SEMICOLON",
            ],
            23: ["CRAFTINGTABLE", "<rutinas>"],
            24: [],
            25: ["<rutina>", "<rutinas>"],
            26: [],
            27: [
                "SPELL",
                "<id>",
                "PARENTHESIS",
                "<parametros>",
                "PARENTHESIS",
                "<cuerpo_funcion>",
                "SEMICOLON",
            ],
            28: [
                "RITUAL",
                "<id>",
                "PARENTHESIS",
                "<parametros>",
                "PARENTHESIS",
                "<cuerpo_rutina>",
                "SEMICOLON",
            ],
            29: ["SPAWNPOINT", "<cuerpo_rutina>", "SEMICOLON"],
            30: ["STACK"],
            31: ["RUNE"],
            32: ["SPIDER"],
            33: ["TORCH"],
            34: ["GHAST"],
            35: ["STRING"],
            36: ["CHAR"],
            37: ["INTEGER"],
            38: ["FLOAT"],
            39: ["ON"],
            40: ["OFF"],
            41: ["<literal_o_variable>"],
            42: [],
            43: ["<literal>", "<mas_parametros>"],
            44: ["<id>", "<mas_parametros>"],
            45: ["COMMA", "<literal_o_variable>"],
            46: [],
            47: [
                "<secciones>",
                "POLLOCRUDO",
                "<inst_exp>",
                "<return_rutina>",
                "POLLOASADO",
            ],
            48: [],
            49: [
                "<secciones>",
                "POLLOCRUDO",
                "<inst_exp>",
                "<return>",
                "POLLOASADO",
            ],
            50: [],
            51: ["<return>"],
            52: [],
            53: ["RESPAWN"],
            54: [
                "<seccion_de_constantes>",
                "<seccion_de_tipos>",
                "<seccion_de_variables>",
            ],
            55: ["<expresion>", "<inst_exp>"],
            56: ["<instruccion>", "<inst_exp>"],
            57: [],
            58: ["<while>"],
            59: ["<if>"],
            60: ["<switch>"],
            61: ["<repeat>"],
            62: ["<for>"],
            63: ["<break>"],
            64: ["REPEATER", "<condicion>", "CRAFT", "<inst_exp_o_bloque>"],
            65: ["TARGET", "<condicion>", "CRAFT", "<cuerpo_if>"],
            66: ["HIT", "<inst_exp_o_bloque>", "MISS", "<inst_exp_o_bloque>"],
            67: ["JUKEBOX", "<condicion>", "CRAFT", "<cuerpo_switch>"],
            68: ["<cases>", "<silence>"],
            69: ["<case>", "<cases>"],
            70: [],
            71: [
                "DISC",
                "<literal>",
                "SEMICOLON",
                "<inst_exp>",
                "COMMA",
                "<break>",
                "SEMICOLON",
            ],
            72: ["SILENCE", "COLON", "<inst_exp>", "COMMA", "<break>", "SEMICOLON"],
            73: ["SPAWNER", "<inst_exp>", "EXHAUSTED", "<condicion>"],
            74: ["WALK", "<index>", "<step>", "CRAFT", "<inst_exp_o_bloque>"],
            75: ["SET", "<id>", "TO", "<expresion>"],
            76: ["STEP", "<expresion>"],
            77: ["CREEPER"],
            78: ["<expresion>"],
            79: ["<instruccion>"],
            80: ["<expresion>"],
            81: ["POLLOCRUDO", "<cuerpo_bloque_inst>", "POLLOASADO"],
            82: ["<instruccion>", "<inst_exp>"],
            83: ["<expresion>", "<inst_exp>"],
            84: ["<asignacion>"],
            85: ["<e_asignado>", "<op_assignacion>", "<or>"],
            86: ["<or>"],
            87: ["<id>"],
            88: ["="],
            89: ["+="],
            90: ["-="],
            91: ["*="],
            92: ["/="],
            93: ["%="],
            94: ["<xor>", "<or_logico>"],
            95: ["OR", "<xor>", "<or_logico>"],
            96: [],
            97: ["<and>", "<xor_logico>"],
            98: ["XOR", "<and>", "<xor_logico>"],
            99: [],
            100: ["<igualdad>", "<and_logico>"],
            101: ["AND", "<igualdad>", "<and_logico>"],
            102: [],
            103: ["<desigualdad>", "<cmp_igualdad>"],
            104: ["IS", "<desigualdad>", "<cmp_igualdad>"],
            105: ["ISNOT", "<desigualdad>", "<cmp_igualdad>"],
            106: [],
            107: ["<dividir_string>", "<cmp_desigual>"],
            108: ["MORETHAN", "<op_lineal>"],
            109: ["MOREEQUAL", "<op_lineal>"],
            110: ["LESSTHAN", "<op_lineal>"],
            111: ["LESSEQUAL", "<op_lineal>"],
            112: [],
            113: ["<unir_intersec_string>", "<op_string>"],
            114: ["FROM", "<literal>", "<literal>", "&&", "<literal>", "<unir_intersec_string>"],
            115: ["EXCEPT", "<literal>", "<literal>", "&&", "<literal>", "<unir_intersec_string>"],
            116: [],
            117: ["<op_lineal>", "<op_union_interec>"],
            118: ["BIND", "<op_lineal>"],
            119: ["SEEK", "<op_lineal>"],
            120: [],
            121: ["<termino>", "<suma_resta>"],
            122: ["+", "<termino>", "<suma_resta>"],
            123: ["-", "<termino>", "<suma_resta>"],
            124: [],
            125: ["<factor>", "<sub_termino>"],
            126: ["*", "<factor>", "<sub_termino>"],
            127: ["/", "<factor>", "<sub_termino>"],
            128: ["//", "<factor>", "<sub_termino>"],
            129: ["%", "<factor>", "<sub_termino>"],
            130: [],
            131: ["<op_unaria>", "<sub_factor>"],
            132: ["<literal>"],
            133: ["<id>"],
            134: ["PARENTHESIS", "<expresion>", "PARENTHESIS"],
            135: ["ISENGRAVED"],
            136: ["ISINSCRIBED"],
            137: ["-"],
            138: ["+"],
            139: ["!"],
            140: ["SOULSAND"],
            141: ["MAGMA"],
            142: [">>CAST"],
            143: ["CHUNK"],
            144: ["&"],
            145: ["ETCHUP"],
            146: ["ETCHDOWN"],
            147: [],
        }
        
    def getRules(self):
        return self.rules

